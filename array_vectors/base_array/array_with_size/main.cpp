// DECLARE AN ARRAY WITH GIVEN SIZE WITH IN A SQUARE BRACKET WITHOUT INITIALIZIER LIST

#include <iostream> // INPUT/OUTPU STREAM OBJECT OF THE PREPROCESSOR DIRECTIVE HEADER FILE
#include <iomanip> // INPUT/OUTPUT MANIPULATE PREPROCESSOR DIRECTIVE HEADER FILE

// SET COUT,CIN,ENDL, SETFILL AND SETWIDTH OF THE STANDARD
using std::cout;
using std::cin;
using std::endl;
using std::setfill;
using std::setw;

// MAIN () FUNCITON OF THE PROGRAM 
int main (void) {
    // DECLARATION AND INITIALIZATION OF A CONSTANT VARIABLE 
    /*
     CONST VARIABLE USED AS AN ARRAY LENGTH IS MORE SCALABLE THAN THAT LITERAL VARIABLES 
    */
    const int arrayLength = 10; // CONSTANT INTEGER VARIABLE
    
    // DECLARE A ARRAY VARAIBLE 
    int array [arrayLength];

    // INITIALZIE ARRAY WITHOUT USING LOOP 
    // ONLY INITILIZE IT'S 3 PARTICULAR ADDRESS 0,5,7

    // INITIALIZE VALUE AT PARTICULAR POSITION OF ARRAY AT O INDEX (SUBSCRIPT VALUE)
    array[0] = 10;

   // FOR SUBSCRIPT 5;
   array [5] = 50;

   // FOR SUBSCRIPT 7 OR INDEX 7 (7 IS AN ARRAY PARTICULAR MEMORY LOCATION THAT HOLD ARRAY 7 INDEX NUMBER ELEMENT )
   array [7] = 70;

   std::cout << array[3] << std::endl; // OUTPUT OF ELEMENT OF A PARTICULAR POSITION ADDRESS OF A ARRAY


   // GETTING ALL ELEMENTS OF THE ARRAY
   // ARRAY WILL BE AUTOMATICALLY INITIALIZED WITH ZERO 0, IF WE DIDN'T INITIALZIE IT WITH ANY NUMBER
   int count = 0;
  // BUT ARRAY PRODUCE RANDOM OR GARBAGE VALUE WHEN USE LOOP TO DISPLAY OUTPUT OF ARRAY'S ELEMENTS
   do {
     // GET ARRAY ELEMENTS VALUE IN THE TUBALR FORM 
     std::cout << count << " = " << std::setfill ('0')
     << std::setw (2) << array[count] << std::endl;

     count++;  // INCREMENT BY 1 (USING POSTFIX INCREMENT OPERATOR )
   } 
   while (count < arrayLength); // CONDITION FOR TERMINATE LOOP WHEN LOOP STATISFIED GIVEN CONDITION

    return 0; // IT INDICATE THAT PROGRAM EXECUTE SUCCESSFULLY
}